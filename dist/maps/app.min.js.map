{"version":3,"sources":["Lumscroll.js","main.js"],"names":["Lumscroll","element","classname","options","_classCallCheck","this","document","querySelector","content","innerHTML","setDefaultOptions","createContainer","createHandle","style","overflow","position","addEventListeners","scrollTop","hasFocus","easingFunction","scrollSpeed","scrollDistance","_this","addEventListener","e","reachedBounds","preventDefault","delta","deltaY","setScrolltop","window","calculateVariables","scrollDelta","quick","_this2","isScrollable","container","transition","concat","maxScroll","top","getScrollPercentage","setTimeout","createElement","className","display","width","append","handleContainer","right","handle","height","backgroundColor","tmpPercent","offsetHeight","percentage","elementHeight","console","log","getComputedStyle","elementPadding","parseInt","bottom","left","elementWidth","offsetWidth","ls","sls"],"mappings":"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","file":"../js/app.min.js","sourcesContent":["class Lumscroll {\r\n  constructor(element, classname, options) {\r\n    this.element = typeof element === \"string\" ? document.querySelector(element) : element;\r\n    if (!this.element) return false;\r\n\r\n    this.classname = classname;\r\n    this.content = this.element.innerHTML;\r\n\r\n    this.setDefaultOptions();\r\n    this.createContainer();\r\n    this.createHandle();\r\n\r\n    this.element.style.overflow = \"hidden\";\r\n    this.element.style.position = \"relative\";\r\n    this.addEventListeners();\r\n  }\r\n\r\n  setDefaultOptions() {\r\n    this.scrollTop = 0;\r\n    this.hasFocus = false;\r\n\r\n    this.easingFunction = \"ease-out\";\r\n    this.scrollSpeed = 200;\r\n    this.scrollDistance = 100;\r\n  }\r\n\r\n  /**\r\n   * Adds the eventlisteners to the document\r\n   * @returns {void}\r\n   */\r\n  addEventListeners() {\r\n    document.addEventListener(\"wheel\", e => {\r\n      if (this.hasFocus) {\r\n        if (!this.reachedBounds()) {\r\n          e.preventDefault();\r\n        }\r\n\r\n        let delta = e.deltaY > 0 ? this.scrollDistance : -this.scrollDistance;\r\n        this.setScrolltop(delta);\r\n\r\n        if (!this.reachedBounds()) {\r\n          e.preventDefault();\r\n        }\r\n      }\r\n    });\r\n\r\n    this.element.addEventListener(\"mouseover\", e => {\r\n      this.hasFocus = true;\r\n    });\r\n\r\n    this.element.addEventListener(\"mouseout\", e => {\r\n      this.hasFocus = false;\r\n    });\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      this.calculateVariables();\r\n      this.setScrolltop(0, true);\r\n    });\r\n  }\r\n\r\n  setScrolltop(scrollDelta, quick) {\r\n    if (!this.isScrollable) {\r\n      return false;\r\n    }\r\n\r\n    if (quick) {\r\n      this.container.style.transition = `0ms ${this.easingFunction}`;\r\n    }\r\n\r\n    this.scrollTop += scrollDelta;\r\n    this.scrollTop = this.scrollTop < 0 ? 0 : this.scrollTop;\r\n    this.scrollTop = this.scrollTop > this.maxScroll ? this.maxScroll : this.scrollTop;\r\n\r\n    this.container.style.top = this.scrollTop * -1 + \"px\";\r\n    this.getScrollPercentage();\r\n\r\n    if (quick) {\r\n      setTimeout(() => {\r\n        this.container.style.transition = `${this.scrollSpeed}ms ${this.easingFunction}`;\r\n      }, this.scrollSpeed);\r\n    }\r\n  }\r\n\r\n  createContainer() {\r\n    this.container = document.createElement(\"div\");\r\n    this.container.className = this.classname;\r\n    this.container.innerHTML = this.content;\r\n    this.container.style.position = \"relative\";\r\n    this.container.style.transition = `${this.scrollSpeed}ms ${this.easingFunction}`;\r\n    this.container.style.top = \"0\";\r\n    this.container.style.display = \"inline-block\";\r\n    this.container.style.width = \"100%\";\r\n    this.element.innerHTML = \"\";\r\n    this.element.append(this.container);\r\n\r\n    this.calculateVariables();\r\n  }\r\n\r\n  createHandle() {\r\n    this.handleContainer = document.createElement(\"div\");\r\n    this.handleContainer.className = this.classname + \"__handle-container\";\r\n    this.handleContainer.style.position = \"absolute\";\r\n    this.handleContainer.style.right = \"0\";\r\n    this.handleContainer.style.top = \"0\";\r\n\r\n    this.handle = document.createElement(\"div\");\r\n    this.handle.className = this.classname + \"__handle\";\r\n    this.handle.style.width = \"5px\";\r\n    this.handle.style.height = \"70px\";\r\n    this.handle.style.backgroundColor = \"rgba(0,0,0,0.3)\";\r\n    this.handle.style.position = \"absolute\";\r\n    this.handle.style.right = \"0\";\r\n    this.handle.style.top = \"0\";\r\n\r\n    this.handleContainer.append(this.handle);\r\n\r\n    this.element.append(this.handleContainer);\r\n  }\r\n\r\n  getScrollPercentage() {\r\n    let tmpPercent = this.scrollTop / (this.container.offsetHeight - this.scrollTop);\r\n    let res = (this.scrollTop + this.elementHeight * tmpPercent) / this.container.offsetHeight;\r\n\r\n    let percentage = (100 / (this.container.offsetHeight - this.elementHeight)) * this.scrollTop;\r\n\r\n    console.log(percentage);\r\n  }\r\n\r\n  reachedBounds() {\r\n    return this.scrollTop <= 0 || this.scrollTop >= this.maxScroll;\r\n  }\r\n\r\n  calculateVariables() {\r\n    let style = getComputedStyle(this.element);\r\n    this.elementPadding = {\r\n      top: parseInt(style[\"padding-top\"]),\r\n      right: parseInt(style[\"padding-right\"]),\r\n      bottom: parseInt(style[\"padding-bottom\"]),\r\n      left: parseInt(style[\"padding-left\"])\r\n    };\r\n\r\n    this.elementHeight = this.element.offsetHeight - (this.elementPadding.top + this.elementPadding.bottom);   \r\n    this.elementWidth = this.element.offsetWidth;\r\n    this.maxScroll = this.container.offsetHeight - this.elementHeight + this.elementPadding.top + this.elementPadding.bottom;\r\n    this.isScrollable = this.maxScroll > this.elementHeight;\r\n  }\r\n}\r\n","window.addEventListener(\"load\", () => {\r\n  window.ls = new Lumscroll(\"#lumenscroll\", \"lumens-scroll\");\r\n  window.sls = new Lumscroll(\"#small-lumenscroll\", \"lumens-scroll\");\r\n});\r\n"]}